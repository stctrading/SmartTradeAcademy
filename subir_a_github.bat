@echo off
title STC Trading - Subir a GitHub y Replit
color 0A
echo.
echo ===============================================
echo   üìö GU√çA PARA SUBIR STC TRADING A GITHUB
echo ===============================================
echo.

echo üéØ PASOS PARA GITHUB:
echo.
echo 1Ô∏è‚É£ INICIALIZAR REPOSITORIO LOCAL:
echo    cd c:\STC_Trading_System
echo    git init
echo    git add .
echo    git commit -m "Initial commit: STC Trading System"
echo.

echo 2Ô∏è‚É£ CREAR REPOSITORIO EN GITHUB:
echo    ‚Ä¢ Ve a: https://github.com/new
echo    ‚Ä¢ Nombre: stc-trading-system
echo    ‚Ä¢ Descripci√≥n: Sistema de trading automatizado para IQ Option
echo    ‚Ä¢ P√∫blico o Privado (tu elecci√≥n)
echo    ‚Ä¢ NO marques README, .gitignore, license (ya los tenemos)
echo    ‚Ä¢ Clic en "Create repository"
echo.

echo 3Ô∏è‚É£ CONECTAR Y SUBIR:
echo    git remote add origin https://github.com/TU_USUARIO/stc-trading-system.git
echo    git branch -M main
echo    git push -u origin main
echo.

echo üöÄ COMANDOS AUTOM√ÅTICOS:
echo ===============================================

echo ¬øQuieres ejecutar los comandos autom√°ticamente? (S/N)
set /p respuesta=

if /i "%respuesta%"=="S" (
    echo.
    echo üì¶ Inicializando repositorio Git...
    git --version >nul 2>&1
    if %errorlevel% neq 0 (
        echo ‚ùå Git no est√° instalado. Inst√°lalo desde: https://git-scm.com/
        pause
        exit /b 1
    )
    
    echo ‚úÖ Git detectado
    git init
    git add .
    git commit -m "Initial commit: STC Trading System completo con dashboard, API y gr√°ficos"
    
    echo.
    echo ‚úÖ Repositorio local creado
    echo.
    echo üåê AHORA EN GITHUB:
    echo    1. Ve a https://github.com/new
    echo    2. Crea repositorio: stc-trading-system
    echo    3. Copia la URL del repositorio
    echo.
    echo üìù Introduce la URL de tu repositorio GitHub:
    echo    Ejemplo: https://github.com/tuusuario/stc-trading-system.git
    set /p repo_url=URL del repositorio: 
    
    if not "%repo_url%"=="" (
        echo.
        echo üîó Conectando con GitHub...
        git remote add origin %repo_url%
        git branch -M main
        
        echo üöÄ Subiendo archivos...
        git push -u origin main
        
        if %errorlevel%==0 (
            echo.
            echo ‚úÖ‚úÖ‚úÖ PROYECTO SUBIDO EXITOSAMENTE A GITHUB! ‚úÖ‚úÖ‚úÖ
            echo.
            echo üåü Tu repositorio est√° en: %repo_url%
        ) else (
            echo.
            echo ‚ùå Error subiendo. Verifica:
            echo    ‚Ä¢ URL del repositorio correcta
            echo    ‚Ä¢ Credenciales de GitHub
            echo    ‚Ä¢ Conexi√≥n a internet
        )
    )
)

echo.
echo ===============================================
echo   üîÑ PASOS PARA REPLIT
echo ===============================================
echo.
echo 1Ô∏è‚É£ IMPORTAR DESDE GITHUB:
echo    ‚Ä¢ Ve a: https://replit.com/
echo    ‚Ä¢ Clic en "Create Repl"
echo    ‚Ä¢ Selecciona "Import from GitHub"
echo    ‚Ä¢ Pega la URL: %repo_url%
echo    ‚Ä¢ Clic en "Import from GitHub"
echo.

echo 2Ô∏è‚É£ CONFIGURAR EN REPLIT:
echo    ‚Ä¢ Replit detectar√° autom√°ticamente Python
echo    ‚Ä¢ Agrega tus credenciales en Secrets:
echo      - IQ_EMAIL: tu_email@gmail.com
echo      - IQ_PASSWORD: tu_password
echo    ‚Ä¢ Ejecuta: pip install -r requirements.txt
echo.

echo 3Ô∏è‚É£ EJECUTAR EN REPLIT:
echo    ‚Ä¢ Archivo principal: dashboard_server.py
echo    ‚Ä¢ O ejecuta: inicio_manual.bat (si est√° disponible)
echo    ‚Ä¢ URLs: https://tu-repl.replit.app
echo.

echo üìã ARCHIVOS IMPORTANTES INCLUIDOS:
echo    ‚úÖ README_GITHUB.md - Documentaci√≥n completa
echo    ‚úÖ .gitignore - Archivos excluidos de Git
echo    ‚úÖ requirements.txt - Dependencias Python
echo    ‚úÖ Todo el c√≥digo fuente del sistema
echo.

echo üéâ ¬°LISTO PARA SUBIR A GITHUB Y REPLIT!
echo.
pause
